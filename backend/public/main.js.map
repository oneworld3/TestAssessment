{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/__components/subject/dashboard/dashboard.component.css","webpack:///./src/app/__components/subject/dashboard/dashboard.component.html","webpack:///./src/app/__components/subject/dashboard/dashboard.component.ts","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.css","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.html","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.ts","webpack:///./src/app/__components/subject/subject-add/subject-add.component.css","webpack:///./src/app/__components/subject/subject-add/subject-add.component.html","webpack:///./src/app/__components/subject/subject-add/subject-add.component.ts","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.css","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.html","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.ts","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.css","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.html","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.ts","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.css","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.html","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.ts","webpack:///./src/app/__components/ui/footer/footer.component.css","webpack:///./src/app/__components/ui/footer/footer.component.html","webpack:///./src/app/__components/ui/footer/footer.component.ts","webpack:///./src/app/__components/ui/header/header.component.css","webpack:///./src/app/__components/ui/header/header.component.html","webpack:///./src/app/__components/ui/header/header.component.ts","webpack:///./src/app/__components/ui/layout/layout.component.css","webpack:///./src/app/__components/ui/layout/layout.component.html","webpack:///./src/app/__components/ui/layout/layout.component.ts","webpack:///./src/app/__components/user/login/logging/logging.component.css","webpack:///./src/app/__components/user/login/logging/logging.component.html","webpack:///./src/app/__components/user/login/logging/logging.component.ts","webpack:///./src/app/__components/user/profile/profile.component.css","webpack:///./src/app/__components/user/profile/profile.component.html","webpack:///./src/app/__components/user/profile/profile.component.ts","webpack:///./src/app/__components/user/register/registering/registering.component.css","webpack:///./src/app/__components/user/register/registering/registering.component.html","webpack:///./src/app/__components/user/register/registering/registering.component.ts","webpack:///./src/app/__guards/auth.guard.ts","webpack:///./src/app/__guards/notAuth.guard.ts","webpack:///./src/app/__models/rating.ts","webpack:///./src/app/__models/subject.ts","webpack:///./src/app/__routes/app-routing.module.ts","webpack:///./src/app/__services/authService/auth.service.ts","webpack:///./src/app/__services/messageService/message.service.ts","webpack:///./src/app/__services/ratingService/rating.service.ts","webpack:///./src/app/__services/subjectService/subject.service.ts","webpack:///./src/app/__services/validateService/validate.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".checked {\\n    color: orange;\\n}\\n\\n.stars-outer\\n{\\n  position: relative;\\n  display: inline;\\n}\\n\\n.stars-inner\\n{\\n  position: absolute;;\\n  top:0;\\n  left:0;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  width: 0%;\\n}\\n\\n.stars-outer::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color: lightgrey;\\n}\\n\\n.stars-inner::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color:red;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <br><br>\\n  <h3>High Rated Subjects</h3>\\n\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\n  </ngx-spinner>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"card text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let subject of subjects\\\">\\n      <div class=\\\"card-header text-center\\\">\\n        <h5>{{ subject.subjectNumber }}</h5>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"><span\\n            class=\\\"badge badge-pill badge-danger\\\">Hot!</span>\\n        </h5>\\n        <p class=\\\"card-text\\\">{{ subject.subjectName }}</p>\\n\\n      </div>\\n      <!-- footer start -->\\n      <div class=\\\"card-footer\\\">\\n        <div>\\n\\n          <div class=\\\"stars-outer\\\">\\n            <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n\\n            </div>\\n          </div>\\n          <!-- Ratings --><br/>\\n          {{subject.numberOfReview}} reviews <br>\\n\\n\\n          <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-primary\\\">Rate Now!\\n          </button>\\n        </div>\\n        <!-- footer end-->\\n      </div>\\n    </div>\\n  </div>\\n  <br><br>\\n  <h3>Most recent Ratings</h3>\\n\\n</div>\\n\\n\\n<!--\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SubjectService} from '../../../__services/subjectService/subject.service';\nimport {Subject} from '../../../__models/subject';\n// import { Subject } from '../../../__models/subject';\n// import { SubjectService } from '../../../__services/subjectService/subject.service';\n\n/**\n * This component displays subject components.\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  subjects: Subject[] = [];\n\n  constructor(private subjectService: SubjectService) { }\n\n  ngOnInit() {\n    this.getSubjects();\n  }\n\n  getSubjects(): void {\n    this.subjectService.getDashboardSubjects()\n    // TODO, it is shoing first four subjects but later it is to display the best rated subjects\n      .subscribe(result => this.subjects = result['subjects'].slice(0, 5));\n  }\n}\n","module.exports = \"@import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css);\\n\\nfieldset{ margin: 0; padding: 0; border: 2px; }\\n\\nlabel{ margin: 0; padding: 0;}\\n\\nbody{ margin: 20px; }\\n\\nh1 { font-size: 1.5em; margin: 10px; }\\n\\n/* */\\n\\n.card\\n{\\n    margin:10px;;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    min-width: 400px;\\n}\\n\\n.reviewComment\\n{\\n  margin-top:-20px;\\n}\\n\\n.reviewComment button\\n{\\n  margin-left: 3px;\\n}\\n\\n/****** Style Star Rating Widget *****/\\n\\n.rating {\\n  border: none;\\n  float: left;\\n}\\n\\n.rating > input { display: none; }\\n\\n.rating > label:before {\\n  margin: 5px;\\n  font-size: 1.25em;\\n  font-family: FontAwesome;\\n  display: inline-block;\\n  content: \\\"\\\\f005\\\";\\n}\\n\\n.rating > .half:before {\\n  content: \\\"\\\\f089\\\";\\n  position: absolute;\\n}\\n\\n.rating > label {\\n  color: #ddd;\\n  float: right;\\n}\\n\\n/***** CSS Magic to Highlight Stars on Hover *****/\\n\\n.rating > input:checked ~ label, /* show gold star when clicked */\\n.rating:not(:checked) > label:hover, /* hover current star */\\n.rating:not(:checked) > label:hover ~ label { color: #FFD700;  }\\n\\n/* hover previous stars in list */\\n\\n.rating > input:checked + label:hover, /* hover current star when changing rating */\\n.rating > input:checked ~ label:hover,\\n.rating > label:hover ~ input:checked ~ label, /* lighten current selection */\\n.rating > input:checked ~ label:hover ~ label { color: #FFED85;  }\\n\\n.stars-outer\\n{\\n  position: relative;\\n  display: inline;\\n  zoom: 2.0;\\n}\\n\\n.stars-inner\\n{\\n  position: absolute;;\\n  top:0;\\n  left:0;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  width: 0%;\\n}\\n\\n.stars-outer::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color: lightgrey;\\n}\\n\\n.stars-inner::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color: #FFD700;\\n}\\n\\n.addRatingButton {\\n  margin-top:15px;\\n  border-radius: 20px;\\n}\\n\\n.subjectdetail{\\n  min-height: 300px;\\n}\\n\\n/*  Bars   */\\n\\nbody {\\n  font-family: Arial;\\n  margin: 0 auto; /* Center website */\\n  max-width: 800px; /* Max width */\\n  padding: 20px;\\n}\\n\\n.heading {\\n  font-size: 25px;\\n  margin-right: 25px;\\n}\\n\\n.fa {\\n  font-size: 25px;\\n}\\n\\n.checked {\\n  color: orange;\\n}\\n\\n/* Three column layout */\\n\\n.side {\\n  float: left;\\n  width: 15%;\\n  margin-top:10px;\\n}\\n\\n.middle {\\n  margin-top:10px;\\n  float: left;\\n  width: 70%;\\n}\\n\\n/* Place text to the right */\\n\\n.right {\\n  text-align: right;\\n}\\n\\n/* Clear floats after the columns */\\n\\n.row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n}\\n\\n/* The bar container */\\n\\n.bar-container {\\n  width: 100%;\\n  background-color: #f1f1f1;\\n  text-align: center;\\n  color: white;\\n}\\n\\n/* Individual bars */\\n\\n.bar-5 {height: 18px; background-color: #4CAF50;}\\n\\n.bar-4 {height: 18px; background-color: #2196F3;}\\n\\n.bar-3 {height: 18px; background-color: #00bcd4;}\\n\\n.bar-2 {height: 18px; background-color: #ff9800;}\\n\\n.bar-1 {height: 18px; background-color: #f44336;}\\n\\n/* Responsive layout - make the columns stack on top of each other instead of next to each other */\\n\\n@media (max-width: 400px) {\\n  .side, .middle {\\n      width: 100%;\\n  }\\n  .right {\\n      display: none;\\n  }\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Display all the Subject content  -->\\n\\n  <!-- User rating chart  -->\\n\\n  <br/>\\n  <!-- Show all the reviews -->\\n  <div class=\\\"col-md-12 card-deck\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card shadow subjectdetail\\\" *ngIf=\\\"subject\\\">\\n        <h5 class=\\\"card-header\\\">{{subject.subjectNumber}} {{subject.subjectName}}</h5>\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{subject.description}}</h5>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button [routerLink]=\\\"['/subjects/edit', subject._id]\\\" class=\\\"btn btn-danger float-right btn-sm\\\">Edit</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Something to work on start -->\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card shadow subjectdetail\\\" *ngIf=\\\"subject\\\">\\n        <div class=\\\"card-header\\\">\\n          <div style=\\\"top:15px;\\\">\\n            <h5>\\n              <small class=\\\"float-left\\\"> Average User Rating of {{averageRating}}&emsp;</small>\\n            </h5>\\n          </div>\\n          <div class=\\\"stars-outer\\\" >\\n            <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n          <!-- User Ratings  -->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"side\\\">\\n              <div>5 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-5\\\" [style.width]='fiveRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{fiveRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>4 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-4\\\" [style.width]='fourRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>{{fourRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>3 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-3\\\" [style.width]='threeRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{threeRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>2 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-2\\\" [style.width]='twoRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{twoRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>1 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-1\\\" [style.width]='oneRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{oneRating}}\\n              </div>\\n            </div>\\n          </div>\\n          <!-- User rating ends -->\\n\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Something to work on end -->\\n\\n    <br/>\\n\\n    <!-- Card Body  -->\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div style=\\\"margin-left: auto; margin-right: auto;\\\">\\n            <fieldset class=\\\"rating ml-auto\\\" style=\\\"zoom:2;\\\">\\n              <input type=\\\"radio\\\" id=\\\"star5\\\" name=\\\"rating\\\" value=\\\"5\\\" (click)=\\\"updateStar(5)\\\"/>\\n              <label class=\\\"full\\\" for=\\\"star5\\\" title=\\\"Awesome - 5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star4half\\\" name=\\\"rating\\\" value=\\\"4.5\\\" (click)=\\\"updateStar(4.5)\\\"/>\\n              <label class=\\\"half\\\" for=\\\"star4half\\\" title=\\\"Pretty good - 4.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star4\\\" name=\\\"rating\\\" value=\\\"4\\\" (click)=\\\"updateStar(4)\\\"/>\\n              <label class=\\\"full\\\" for=\\\"star4\\\" title=\\\"Pretty good - 4 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star3half\\\" name=\\\"rating\\\" value=\\\"3.5\\\" (click)=\\\"updateStar(3.5)\\\"/>\\n              <label class=\\\"half\\\" for=\\\"star3half\\\" title=\\\"Meh - 3.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star3\\\" name=\\\"rating\\\" value=\\\"3\\\" (click)=\\\"updateStar(3)\\\"/>\\n              <label class=\\\"full\\\" for=\\\"star3\\\" title=\\\"Meh - 3 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star2half\\\" name=\\\"rating\\\" value=\\\"2.5\\\" (click)=\\\"updateStar(2.5)\\\"/>\\n              <label class=\\\"half\\\" for=\\\"star2half\\\" title=\\\"Kinda bad - 2.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star2\\\" name=\\\"rating\\\" value=\\\"2\\\" (click)=\\\"updateStar(2)\\\"/>\\n              <label class=\\\"full\\\" for=\\\"star2\\\" title=\\\"Kinda bad - 2 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star1half\\\" name=\\\"rating\\\" value=\\\"1.5\\\" (click)=\\\"updateStar(1.5)\\\"/>\\n              <label class=\\\"half\\\" for=\\\"star1half\\\" title=\\\"Meh - 1.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star1\\\" name=\\\"rating\\\" value=\\\"1\\\" (click)=\\\"updateStar(1)\\\"/>\\n              <label class=\\\"full\\\" for=\\\"star1\\\" title=\\\"Sucks big time - 1 star\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"starhalf\\\" name=\\\"rating\\\" value=\\\"0.5\\\" (click)=\\\"updateStar(0.5)\\\"/>\\n              <label class=\\\"half\\\" for=\\\"starhalf\\\" title=\\\"Sucks big time - 0.5 stars\\\"></label>\\n            </fieldset>\\n          </div>\\n          <textarea name=\\\"ratingDescription\\\" [(ngModel)]=\\\"rating.ratingDescription\\\" class=\\\"form-control\\\"\\n                    id=\\\"ratingDescription\\\"\\n                    placeholder=\\\"Write a Review\\\"></textarea>\\n\\n          <button class=\\\"btn btn-primary w-100 addRatingButton\\\" type=\\\"submit\\\" (click)='addRating();form.reset();'>Add\\n            Rating\\n          </button>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Review -->\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card shadow text-center\\\" *ngFor=\\\"let rating of ratings\\\">\\n        <div *ngIf=\\\"rating.editFlag == false\\\">\\n\\n          <div class=\\\"card-body\\\">\\n\\n            <textarea class=\\\"form-control w-100\\\" [disabled]=\\\"true\\\">{{rating.ratingDescription}}</textarea>\\n\\n            <div class=\\\"stars-outer float-left\\\">\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"(rating.star)*20 + '%'\\\"></div>\\n            </div>\\n            <p style=\\\"clear:left;float:left;\\\">\\n              {{rating.username}}\\n            </p>\\n            <div class=\\\"reviewComment float-right\\\" *ngIf=\\\"rating.userID == user.id\\\">\\n              <button class=\\\"btn btn-danger\\\" title=\\\"delete rating\\\" (click)=\\\"delete(rating)\\\">Delete\\n              </button>\\n              <button class=\\\"btn btn-primary\\\" title=\\\"edit rating\\\" (click)=\\\"edit(rating)\\\">Edit\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"rating.editFlag == true\\\">\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\">User Name</label>\\n              <input name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"\\n                     disabled>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ratingDescription1\\\">Rating Description</label>\\n              <input name=\\\"ratingDescription1\\\" [(ngModel)]=\\\"rating.ratingDescription\\\" class=\\\"form-control\\\"\\n                     id=\\\"ratingDescription1\\\"\\n                     placeholder=\\\"Enter Rating Description\\\">\\n            </div>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)='editRating(rating)'>Edit Rating</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Rating} from '../../../__models/rating';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {SubjectService} from '../../../__services/subjectService/subject.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {RatingService} from '../../../__services/ratingService/rating.service';\nimport {Subject} from '../../../__models/subject';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-subject-add-review',\n  templateUrl: './subject-add-review.component.html',\n  styleUrls: ['./subject-add-review.component.css']\n})\nexport class SubjectAddReviewComponent implements OnInit {\n\n  message;\n  messageClass;\n\n  processing = false;\n  currentUrl;\n  form;\n\n  subjectPosts;\n\n  loadEditForm = true;\n\n  @Input() subject: Subject;\n\n  public rating: Rating;\n  ratings: Rating[];\n\n  oneRating: number = 0;\n  twoRating: number = 0;\n  threeRating: number = 0;\n  fourRating: number = 0;\n  fiveRating: number = 0;\n\n  oneRatingPercentage;\n  twoRatingPercentage;\n  threeRatingPercentage;\n  fourRatingPercentage;\n  fiveRatingPercentage;\n\n  averageRating;\n\n  user;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private subjectService: SubjectService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private flashMessageService: FlashMessagesService,\n    private ratingService: RatingService,\n  ) {\n    this.rating = new Rating();\n\n    this.createNewSubjectForm();\n    this.user = JSON.parse(localStorage.getItem('user'));\n\n  }\n\n  ngOnInit() {\n    this.getSingleSubject();\n  }\n\n  getSingleSubject() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n\n    this.subjectService.getSingleSubject(this.currentUrl.id).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = 'Subject Not found';\n      } else {\n        this.subject = data.subject;\n        this.loadEditForm = false;\n\n        this.getRatingsbySubjectID();\n\n        this.ratingService.ratingAdded_Observable.subscribe(res => {\n          this.clearRatingStar();\n          this.getRatingsbySubjectID();\n        });\n      }\n    });\n\n  }\n\n  subjectNumberValidation(controls) {\n    const regExp = new RegExp(/^[0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return {'subjectNumberValidation': true};\n    }\n  }\n\n  subjectNameValidation(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return {'subjectNameValidation': true};\n    }\n  }\n\n  createNewSubjectForm() {\n    this.form = this.formBuilder.group({\n      subjectNumber: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(5),\n        Validators.minLength(5),\n        this.subjectNumberValidation\n      ])],\n      subjectName: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(100),\n        Validators.minLength(3),\n        this.subjectNameValidation\n      ])],\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(25000),\n        Validators.minLength(8),\n      ])],\n    });\n  }\n\n  updateStar(star) {\n    this.rating.star = star;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n\n  getRatingsbySubjectID() {\n    this.ratingService.getRatingsbySubjectID(this.subject._id)\n      .subscribe(result => {\n        this.ratings = result['data'];\n        // this.ratings.forEach(function (element) {\n        //   element.editFlag = false;\n        // });\n        this.ratings.forEach(element => {\n          if (element.star == 5 || element.star == 4.5) {\n            this.fiveRating = this.fiveRating + 1;\n          } else if (element.star == 4 || element.star == 3.5) {\n            this.fourRating = this.fourRating + 1;\n          } else if (element.star == 3 || element.star == 2.5) {\n            this.threeRating = this.threeRating + 1;\n          } else if (element.star == 2 || element.star == 1.5) {\n            this.twoRating = this.twoRating + 1;\n          } else if (element.star == 1 || element.star == 0.5 || element.star == 0) {\n            this.oneRating = this.oneRating + 1;\n          }\n          element.editFlag = false;\n        });\n\n        this.fiveRatingPercentage = `${Math.round(((this.fiveRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n        this.fourRatingPercentage = `${Math.round(((this.fourRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n        this.threeRatingPercentage = `${Math.round(((this.threeRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n        this.twoRatingPercentage = `${Math.round(((this.twoRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n        this.oneRatingPercentage = `${Math.round(((this.oneRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n\n        this.averageRating = Math.round(this.subject.percentageRating * 5) / 100;\n      });\n  }\n\n  addRating(): void {\n    if (this.rating.ratingDescription) {\n      this.rating.subjectID = this.subject._id;\n      this.rating.userID = this.user.id;\n      this.rating.username = this.user.username;\n      if (this.subject.numberOfReview && this.subject.percentageRating) {\n        this.subject.numberOfReview = this.subject.numberOfReview + 1;\n        this.subject.percentageRating =\n          (this.subject.percentageRating * (this.subject.numberOfReview - 1) + this.rating.star * 20) / this.subject.numberOfReview;\n      } else {\n        this.subject.numberOfReview = 1;\n        this.subject.percentageRating = this.rating.star * 20;\n      }\n      this.subjectService.editSubject(this.subject).subscribe(res => {\n\n        if (res['success'] === true) {\n          this.subjectService.notifySubjectAddition();\n        } else {\n          this.flashMessageService.show('Attempt failed, try again.', {cssClass: 'alert-danger', timeout: 1000});\n        }\n      }, error => {\n        this.flashMessageService.show('Error: ' + error, {cssClass: 'alert-danger.', timeout: 1000});\n      });\n\n      this.ratingService.addRating(this.rating).subscribe(res => {\n        console.log('response is ', res);\n        if (res['status'] === 'success') {\n          this.ratingService.notifyRatingAddition();\n          this.flashMessageService.show('Rating added', {cssClass: 'alert-success.', timeout: 1000});\n\n        } else {\n          this.flashMessageService.show('Attempt failed, try again.', {cssClass: 'alert-danger.', timeout: 1000});\n        }\n      }, error => {\n        this.flashMessageService.show('Error: ' + error, {cssClass: 'alert-danger.', timeout: 1000});\n      });\n    } else {\n      this.flashMessageService.show('Rating Description Required', {cssClass: 'alert-danger.', timeout: 1000});\n    }\n  }\n\n  edit(rating: Rating): void {\n    rating.editFlag = true;\n  }\n\n  editRating(rating: Rating): void {\n    this.ratingService.updateRating(rating).subscribe(res => {\n      if (res['status'] === 'success') {\n        this.ratingService.notifyRatingAddition();\n        rating.editFlag = false;\n        this.message = 'Rating edited.';\n      } else {\n        this.flashMessageService.show('Attempt failed, try again.', {cssClass: 'alert-danger.', timeout: 1000});\n      }\n    });\n  }\n\n  delete(rating: Rating): void {\n    this.ratings = this.ratings.filter(r => r !== rating);\n    this.ratingService.deleteRating(rating).subscribe();\n  }\n\n  clearRatingStar(): void {\n    this.fiveRating = 0;\n    this.fourRating = 0;\n    this.threeRating = 0;\n    this.twoRating = 0;\n    this.oneRating = 0;\n  }\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n    top: 10px;\\n    margin: auto;\\n    max-width: 700px;\\n}\\n.subject-name\\n{\\n    background-color: #03a9f4 !important;\\n}\\n.card\\n{\\n    margin:auto;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    max-width: 700px;\\n}\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n.card .inputBox textarea:focus ~ label,\\n.card .inputBox textarea:valid ~ label\\n{\\n    top: -28px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n}\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n.policy\\n{\\n    font-size: 12px;\\n}\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n.buttons button\\n{\\n    margin:10px;\\n}\\n\\n\"","module.exports = \" <div class=\\\"container\\\">\\n <!-- New Subject Form -->\\n <form [formGroup]=\\\"form\\\" (submit)=\\\"onSubjectSubmit()\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card registration\\\">\\n\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Add Subject</h1>\\n\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- Subject Number -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.subjectNumber.errors && form.controls.subjectNumber.dirty), 'has-success': !form.controls.subjectNumber.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"subjectNumber\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectNumber\\\" />\\n          <label>Subject Number</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.required && form.controls.subjectNumber.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectNumber.errors?.minlength || form.controls.subjectNumber.errors?.maxlength) && form.controls.subjectNumber.dirty\\\">\\n              Must be 5 numbers\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.subjectNumberValidation && form.controls.subjectNumber.dirty && (form.controls.subjectNumber.value.length != 0)\\\">Invalid\\n              Subject Number\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Subject Name -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.subjectName.errors && form.controls.subjectName.dirty), 'has-success': !form.controls.subjectName.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"subjectName\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectName\\\" />\\n          <label>Subject Name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.required && form.controls.subjectName.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectName.errors?.minlength || form.controls.subjectName.errors?.maxlength) && form.controls.subjectName.dirty\\\">*Min\\n              : 3, Max characters: 100\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.subjectNameValidation && form.controls.subjectName.dirty && form.controls.subjectName.value.length != 0\\\">Invalid\\n              Subject Name, No special characters except . , - and '\\n            </p>\\n          </div>\\n        </div>\\n        <br/>\\n        <!-- Subject Description -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.description.errors && form.controls.description.dirty), 'has-success': !form.controls.description.errors}\\\">\\n          <textarea class=\\\"form-control\\\" style=\\\"min-height:150px;\\\" name=\\\"description\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"description\\\"></textarea>\\n          <label style=\\\"left:10px;\\\">Write the Description of the Subject</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block-textarea\\\">\\n            <!-- Required error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.description.errors?.required && form.controls.description.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.description.errors?.minlength || form.controls.description.errors?.maxlength) && form.controls.description.dirty\\\">*Minimum\\n              characters: 8, Maximum characters: 25000\\n            </p>\\n          </div>\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"descriptionMessage && !form.controls.description.errors?.validatedescriptions\\\">{{descriptionMessage}}</p>\\n        </div>\\n\\n        <div class=\\\"buttons\\\">\\n            <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Add Subject</button>\\n            <button [routerLink]=\\\"['/subjects']\\\" style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\" name=\\\"\\\">Go Back</button>    \\n        </div>\\n        \\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { SubjectService } from './../../../__services/subjectService/subject.service';\nimport { AuthService } from './../../../__services/authService/auth.service';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-subject-add',\n  templateUrl: './subject-add.component.html',\n  styleUrls: ['./subject-add.component.css']\n})\nexport class SubjectAddComponent implements OnInit {\n\n  message;\n  messageClass;\n\n  processing = false;\n\n  form;\n\n  user;\n  \n  subjectPosts;\n\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private subjectService: SubjectService,\n    private authService: AuthService,\n    private router: Router\n  ) \n  {\n    this.createNewSubjectForm();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubjectSubmit(){\n    this.processing = true;\n\n    const subject = {\n      subjectNumber: this.form.get('subjectNumber').value,\n      subjectName: this.form.get('subjectName').value,\n      description: this.form.get('description').value\n    }\n\n    this.subjectService.newSubject(subject).subscribe(data => {\n      if(!data.success) {\n        this.messageClass= 'alert alert-danger small';\n        this.message = data.message;\n        this.processing = false;\n      } else {\n        this.messageClass = 'alert alert-success small'\n        this.message = data.message;\n        setTimeout(() => {\n          this.processing = false;\n          this.router.navigate(['/subjects']);\n          this.form.reset();\n        }, 2000);\n      }\n    });\n    \n  }\n\n  subjectNumberValidation(controls){\n    const regExp = new RegExp(/^[0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNumberValidation' : true }\n    }\n  }\n\n  subjectNameValidation(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNameValidation' : true }\n    }\n  }\n\n  createNewSubjectForm() {\n    this.form = this.formBuilder.group({\n      subjectNumber: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(5),\n        Validators.minLength(5),\n        this.subjectNumberValidation\n      ])],\n      subjectName: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(100),\n        Validators.minLength(3),\n        this.subjectNameValidation\n      ])],\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(25000),\n        Validators.minLength(8),\n      ])],\n    })\n  }\n\n  goBack()\n  {\n    window.location.reload();\n  }\n\n}\n","module.exports = \".card {\\n    top: 100px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\\n.buttons-position\\n{\\n    top: 100px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.buttons-position button\\n{\\n    margin: 5px;\\n    width: 46%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Message Display -->\\n  <br />\\n  <div class=\\\"row show-hide-message\\\">\\n    <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\n      {{ message }}\\n    </div>\\n  </div>\\n\\n  <!-- New Subject Form -->\\n  <div class=\\\"shadow mb-5 bg-white rounded card registration\\\">\\n\\n    <div class=\\\"card-header\\\">\\n        <h3 class=\\\"text-center\\\">Confirmation</h3>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      \\n\\n      <!-- Subject Number -->\\n      <div class=\\\"inputBox\\\">\\n        <p>Are you sure?</p>\\n        <div class=\\\"buttons-position\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteSubject()\\\">Yes</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goBack()\\\">No</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from './../../../__services/subjectService/subject.service';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-subject-delete',\n  templateUrl: './subject-delete.component.html',\n  styleUrls: ['./subject-delete.component.css']\n})\nexport class SubjectDeleteComponent implements OnInit {\n\n  message;\n  messageClass;\n  subject;\n\n  foundSubject = false;\n  currentUrl;\n\n  constructor(\n    private subjectService: SubjectService,\n    private location: Location,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    if(!this.currentUrl.id)\n    {\n      this.messageClass = 'alert-danger';\n      this.message = 'No id provided';\n    } else {\n      this.foundSubject = true;\n    }\n  }\n\n  deleteSubject() {\n    this.subjectService.deleteSubject(this.currentUrl.id).subscribe(data => {\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.router.navigate(['/subjects']);\n        },2000)\n      }\n    })\n  }\n\n  goBack(){\n    this.location.back();\n  }\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n    top: 10px;\\n    margin: auto;\\n    max-width: 700px;\\n}\\n.subject-name\\n{\\n    background-color: #03a9f4 !important;\\n}\\n.card\\n{\\n    margin:auto;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    max-width: 700px;\\n}\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n.card .inputBox\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n.show-hide-message\\n{\\n    width: 100%;\\n    margin: 10px;\\n}\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n.card .inputBox textarea:focus ~ label,\\n.card .inputBox textarea:valid ~ label\\n{\\n    top: -28px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n}\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n.policy\\n{\\n    font-size: 12px;\\n}\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n.buttons button\\n{\\n    margin:10px;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Message Display -->\\n  <br/>\\n  <div class=\\\"row show-hide-message\\\" >\\n      <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\n        {{ message }}\\n      </div>\\n    </div>\\n\\n    <!-- New Subject Form -->\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"updateSubjectSubmit()\\\" *ngIf=\\\"!loadEditForm\\\" >\\n       <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card registration\\\">\\n\\n         <div class=\\\"card-body\\\">\\n           <h1 class=\\\"text-center\\\">Edit Subject</h1>\\n   \\n           <!-- Subject Number -->\\n           <div class=\\\"inputBox\\\">\\n             <input type=\\\"text\\\" name=\\\"subjectNumber\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectNumber\\\" [(ngModel)]=\\\"subject.subjectNumber\\\"/>\\n             <label>Subject Number</label>\\n             <!-- Error Block -->\\n             <div class=\\\"help-block\\\">\\n               <!-- Required Error -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.required && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine)\\\">*This\\n                 field is Required</p>\\n               <!-- Minimum and Maximum length of data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectNumber.errors?.minlength || form.controls.subjectNumber.errors?.maxlength) && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine)\\\">\\n                 Must be 5 numbers\\n               </p>\\n               <!-- Invalid data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.subjectNumberValidation && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine) && (form.controls.subjectNumber.value.length != 0)\\\">Invalid\\n                 Subject Number\\n               </p>\\n             </div>\\n           </div>\\n   \\n           <!-- Subject Name -->\\n           <div class=\\\"inputBox\\\">\\n             <input type=\\\"text\\\" name=\\\"subjectName\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectName\\\" [(ngModel)]=\\\"subject.subjectName\\\"/>\\n             <label>Subject Name</label>\\n             <!-- Error Block -->\\n             <div class=\\\"help-block\\\">\\n               <!-- Required Error -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.required && form.controls.subjectName.dirty\\\">*This\\n                 field is Required</p>\\n               <!-- Minimum and Maximum length of data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectName.errors?.minlength || form.controls.subjectName.errors?.maxlength) && form.controls.subjectName.dirty\\\">*Min\\n                 : 3, Max characters: 100\\n               </p>\\n               <!-- Invalid data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.subjectNameValidation && form.controls.subjectName.dirty && form.controls.subjectName.value.length != 0\\\">Invalid\\n                 Subject Name, No special characters except . , - and '\\n               </p>\\n             </div>\\n           </div>\\n           <br/>\\n           <!-- Subject Description -->\\n           <div class=\\\"inputBox\\\">\\n             <textarea class=\\\"form-control\\\" style=\\\"min-height:150px;\\\" name=\\\"description\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"subject.description\\\"></textarea>\\n             <label style=\\\"left:10px;\\\">Write the Description of the Subject</label>\\n             <!-- Error Block -->\\n             <div class=\\\"help-block-textarea\\\">\\n               <!-- Required error -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.description.errors?.required && form.controls.description.dirty\\\">*This\\n                 field is Required</p>\\n               <!-- Minimum and Maximum length of data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.description.errors?.minlength || form.controls.description.errors?.maxlength) && form.controls.description.dirty\\\">*Minimum\\n                 characters: 8, Maximum characters: 25000\\n               </p>\\n             </div>\\n             <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"descriptionMessage && !form.controls.description.errors?.validatedescriptions\\\">{{descriptionMessage}}</p>\\n           </div>\\n   \\n           <div class=\\\"buttons\\\">\\n               <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Save Changes</button>\\n               <button style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-warning\\\" type=\\\"button\\\" name=\\\"\\\" (click)=\\\"goBack()\\\">Go Back</button>    \\n               <button [routerLink]=\\\"['/subjects/delete/', subject._id]\\\" style=\\\"float:right\\\" type=\\\"submit\\\" class=\\\"btn btn-danger\\\" name=\\\"\\\">Delete Subject</button>\\n            </div>\\n           \\n         </div>\\n       </div>\\n     </form>\\n\\n   </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { SubjectService } from './../../../__services/subjectService/subject.service';\nimport { AuthService } from './../../../__services/authService/auth.service';\n\nimport {Subject} from '../../../__models/subject';\nimport {Rating} from '../../../__models/rating';\nimport {RatingService} from '../../../__services/ratingService/rating.service';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-subject-edit',\n  templateUrl: './subject-edit.component.html',\n  styleUrls: ['./subject-edit.component.css']\n})\nexport class SubjectEditComponent implements OnInit {\n\n  message;\n  messageClass;\n\n  processing = false;\n  currentUrl;\n  form;\n\n  user;\n\n  subjectPosts;\n\n  loadEditForm = true;\n\n  subject;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private subjectService: SubjectService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  )\n  {\n    this.createNewSubjectForm();\n\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    this.subjectService.getSingleSubject(this.currentUrl.id).subscribe(data => {\n      if(!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = \"Subject Not found\";\n      } else {\n        this.subject = data.subject;\n        this.loadEditForm = false;\n      }\n    })\n  }\n\n\n  subjectNumberValidation(controls){\n    const regExp = new RegExp(/^[0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNumberValidation' : true }\n    }\n  }\n\n  subjectNameValidation(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNameValidation' : true }\n    }\n  }\n\n  createNewSubjectForm() {\n    this.form = this.formBuilder.group({\n      subjectNumber: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(5),\n        Validators.minLength(5),\n        this.subjectNumberValidation\n      ])],\n      subjectName: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(100),\n        Validators.minLength(3),\n        this.subjectNameValidation\n      ])],\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(25000),\n        Validators.minLength(8),\n      ])],\n    })\n  }\n\n  goBack()\n  {\n    this.location.back();\n  }\n\n  updateSubjectSubmit()\n  {\n    this.processing = true;\n    this.subjectService.editSubject(this.subject).subscribe(data => {\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.location.back();\n        },2000)\n      }\n    });\n  }\n\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n    top: 10px;\\n    margin: auto;\\n    max-width: 700px;\\n}\\n.subject-name\\n{\\n    background-color: #03a9f4 !important;\\n    min-height: 80px;\\n}\\n.card\\n{\\n    min-width: 245px;\\n    max-width: 245px;\\n    margin:10px;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    min-height: 300px;\\n    max-height: 300px;\\n    overflow: hidden;\\n}\\n.card-title\\n{\\n    font-weight: 900;\\n}\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n.card .inputBox textarea:focus ~ label,\\n.card .inputBox textarea:valid ~ label\\n{\\n    top: -28px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n}\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n.card .inputBox input:focus,\\n.card .inputBox input:valid\\n{\\n    border-color: #03a9f4;\\n}\\n.policy\\n{\\n    font-size: 12px;\\n}\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n.buttons button\\n{\\n    margin:10px;\\n}\\n.design-display {\\n    width: 15rem; \\n    display: inline-block;\\n    margin:5px;\\n}\\n.stars-outer\\n{\\n    position: relative;\\n    display: inline;\\n}\\n.stars-inner\\n{\\n    position: absolute;;\\n    top:0;\\n    left:0;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 0%;\\n}\\n.stars-outer::before {\\n    content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n    font-family: FontAwesome;\\n    font-weight: 900;\\n    color: lightgrey;\\n}\\n.stars-inner::before {\\n    content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n    font-family: FontAwesome;\\n    font-weight: 900;\\n    color:red;\\n}\\n\\n\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\" >\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\n  </ngx-spinner>\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"design-display\\\" *ngFor=\\\"let subject of subjectPosts\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-header text-center\\\">\\n          <h5><code class=\\\"card-title\\\">{{ subject.subjectNumber }}</code> {{ subject.subjectName }}</h5>\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"></p>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          {{subject.description}}\\n        </div>\\n        <!-- footer start -->\\n        <div class=\\\"card-footer\\\">\\n          <div>\\n\\n            <div class=\\\"stars-outer\\\">\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n\\n              </div>\\n            </div>\\n            <!-- Ratings --><br />\\n            {{subject.numberOfReview}} reviews\\n\\n            <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-warning btn-sm float-right\\\">Find\\n              out more</button>\\n          </div>\\n          <!-- footer end-->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { SubjectService } from './../../../__services/subjectService/subject.service';\nimport { AuthService } from './../../../__services/authService/auth.service';\n\nimport { NgxSpinnerService } from 'ngx-spinner'\n\n\n@Component({\n  selector: 'app-subject-feed',\n  templateUrl: './subject-feed.component.html',\n  styleUrls: ['./subject-feed.component.css']\n})\nexport class SubjectFeedComponent implements OnInit{\n\n  message;\n  messageClass;\n  user;\n  \n  subjectPosts;\n\n  rating;\n  maximumPossibleRating;\n  numberOfreview;\n  percentageRating;\n  percentageRatingRounded;\n  \n  constructor(\n    private subjectService: SubjectService,\n    private authService: AuthService,\n    private spinner : NgxSpinnerService\n  ) \n  {\n    \n  }\n\n  getAllSubjects() {\n    this.spinner.show();\n    \n    this.subjectService.getAllSubjects().subscribe(data => {\n      this.subjectPosts = data.subjects;\n      this.subjectPosts.forEach(function (subjectPost) {\n        if (subjectPost.description.length > 100 ) {\n          subjectPost.description = subjectPost.description.substring(0, 100) + '...';\n        }\n      });\n      this.spinner.hide();\n    })\n\n  }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    });\n    \n    this.getAllSubjects();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- \\n<nav class=\\\"navbar navbar-dark bg-dark mt-5 fixed-bottom\\\">\\n    <div class=\\\"navbar-expand m-auto navbar-text\\\">\\n      Made By : RDJ\\n    </div>\\n</nav>\\nfooter -->\"","import { Component, OnInit } from '@angular/core';\n/**\n * This component displays footer to the root layout,\n * so that it can be displayed throughout the pages.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Navbar  -->\\n<nav *ngIf=\\\"!authService.notLoggedIn()\\\" class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n  <a class=\\\"navbar-brand\\\" style=\\\"font-weight:900;\\\" href=\\\"#\\\">UTS-Subject-Review</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navbarNavDropdown\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/subjects']\\\">Subjects</a>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n          aria-expanded=\\\"false\\\">\\n          <i class=\\\"fa fa-user fixed-user\\\"></i>\\n        </a>\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subjects/add']\\\">Add Subject</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"onClickLogout()\\\" href=\\\"#\\\">Logout</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../__services/authService/auth.service';\nimport { Router } from '@angular/router'\n\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n/**\n * This component displays header to the root layout,\n * so that it can be displayed throughout the pages.\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router,\n    private flashMessagesService: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n  //User logout function implemented here.\n  onClickLogout() {\n    this.authService.logout();\n    this.flashMessagesService.show('You are logged out', {cssClass: 'alert-success small'});\n    console.log('You are logged out');\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"    <ng-content>\\n      \\n    </ng-content>\\n\"","import { Component, OnInit } from '@angular/core';\n\n/**\n * This component provides frame for the application.\n */\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login\\n{\\n    font-family: 'Trebuchet MS';\\n}\\n\\n.card {\\n    top: 100px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n\\n.card button\\n{\\n    width:100%;\\n    border-radius: 20px;\\n}\\n\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n\\n.card .inputBox input:focus,\\n.card .inputBox input:valid\\n{\\n    border-color: #03a9f4;\\n}\\n\\n.policy\\n{\\n    font-size: 12px;\\n}\\n\\n.signup\\n{\\n    margin-top: 20%;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\"","module.exports = \"<div class=\\\"login\\\">\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Let's get Started!</h1>\\n        <br>\\n        <br>\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- email -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error': form.controls.email.errors && form.controls.email.dirty, 'has-success': form.controls.email.valid && form.controls.email.dirty }\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" formControlName=\\\"email\\\" />\\n          <label>Email</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\n              field is Required</p>\\n          </div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\">\\n          <label>Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n              <!-- Required Error -->\\n              <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">*This\\n                field is Required</p>\\n            </div>\\n        </div>\\n\\n        <!-- Login Button -->\\n        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"\\\">Login</button>\\n        <p class=\\\"policy text-center\\\" style=\\\"margin-top:5px;\\\"><a href=\\\"#\\\">Forgot Password?</a></p>\\n\\n        <p class=\\\"signup text-center\\\">Don't Have an account? <a routerLink=\\\"/register\\\">Register here</a></p>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../__services/authService/auth.service';\nimport { Router } from '@angular/router'\nimport { User } from '../../../../__models/user';\n\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.css']\n})\nexport class LoggingComponent implements OnInit {\n  \n  messageClass;\n  message;\n  processing = false;\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService : AuthService,\n    private router : Router\n  ) { \n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  disableForm() {\n    this.form.controls['email'].disable();\n    this.form.controls['password'].disable();\n  }\n\n  enableForm() {\n    this.form.controls['email'].enable();\n    this.form.controls['password'].enable();\n  }\n\n  onLoginSubmit() {\n\n    this.processing = true;\n    this.disableForm();\n\n    const user = {\n      email: this.form.get('email').value,\n      password: this.form.get('password').value\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n        if (data.success) {\n          this.authService.storeUserData(data.token, data.user);\n          this.router.navigate(['/subjects']);\n        }\n        else {\n          this.messageClass = 'alert alert-danger';\n          this.message = data.message;\n          this.processing = false;\n          this.enableForm();\n        }\n    })\n  }\n\n}\n","module.exports = \".card {\\n    top: 10px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n\\n.card button\\n{\\n    width:100%;\\n    border-radius: 20px;\\n}\\n\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n\\n.policy\\n{\\n    font-size: 12px;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Message Display -->\\n  <br />\\n  <div class=\\\"row show-hide-message\\\">\\n    <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\n      {{ message }}\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"loadEditForm\\\">\\n    <div *ngIf=\\\"user\\\">\\n      \\n      <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n        \\n        <div class=\\\"card-header\\\">\\n            <h1> Profile </h1>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n        <p>First Name : {{user.f_name}}</p>\\n        <p>Last Name : {{user.l_name}} </p>\\n        <p>Username : {{user.username}} </p>\\n        <p>Email : {{user.email}} </p>\\n        <p class=\\\"text-danger small\\\">Note: you need to update your password as well for security purpose</p>\\n      </div>\\n        <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"editUserForm()\\\">Edit</button>\\n      </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- New Subject Form -->\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"updateUserSubmit()\\\" *ngIf=\\\"!loadEditForm\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Edit Profile</h1>\\n\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- First Name -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"f_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"f_name\\\" [(ngModel)]=\\\"user.f_name\\\" />\\n          <label>First name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.f_name.errors?.required && form.controls.f_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.f_name.errors?.minlength || form.controls.f_name.errors?.maxlength) && form.controls.f_name.dirty\\\">*Minimum\\n              characters: 2\\n              Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.f_name.errors?.validateName && form.controls.f_name.dirty && (form.controls.f_name.value.length != 0)\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Last Name -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"l_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"l_name\\\" [(ngModel)]=\\\"user.l_name\\\" />\\n          <label>Last name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.l_name.errors?.required && form.controls.l_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.l_name.errors?.minlength || form.controls.l_name.errors?.maxlength) && form.controls.l_name.dirty && form.controls.l_name.value.length != 0\\\">*Minimum\\n              characters: 2, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.l_name.errors?.validateName && form.controls.l_name.dirty && form.controls.l_name.dirty && form.controls.l_name.value.length != 0\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Email -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"user.email\\\"\\n            (blur)=\\\"checkEmail()\\\" />\\n          <label>Email</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty && form.controls.email.touched && form.controls.email.value.length < 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.validateEmails && form.controls.email.dirty && form.controls.email.value.length >= 5\\\">Invalid\\n              email\\n            </p>\\n          </div>\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"emailMessage && !form.controls.email.errors?.validateEmails\\\">{{emailMessage}}</p>\\n        </div>\\n\\n        <!-- Username -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"username\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\n            (blur)=\\\"checkUsername()\\\" />\\n          <label>Username</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty && form.controls.username.value.length != 0\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty && form.controls.username.value.length != 0\\\">Username\\n              must not have any special characters\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"usernameMessage && !form.controls.username.errors?.validateUsername && !form.controls.username.errors?.minlength && !form.controls.username.errors?.maxlength\\\">{{usernameMessage}}</p>\\n\\n\\n          </div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\n          <label>Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This\\n              field is required </p>\\n\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) && form.controls.password.dirty && form.controls.password.value.length <= 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n\\n          </div>\\n          <!-- Invalid data error  -->\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty && form.controls.password.value.length > 5\\\">Passord\\n            must contain atleast 1 Uppercase, 1 lowercase, 1 number and 1 special character\\n          </p>\\n\\n        </div>\\n\\n\\n        <!-- Confirm Password -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"confirm_password\\\" />\\n          <label>Confirm Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.confirm_password.errors?.required && form.controls.confirm_password.dirty\\\">This\\n              field is required\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm_password.dirty\\\">Password\\n              do not match</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"buttons\\\">\\n          <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Save Changes</button>\\n          <button style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-warning\\\" type=\\\"button\\\" name=\\\"\\\" (click)=\\\"goBack()\\\">Go\\n            Back</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../__services/authService/auth.service'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  message;\n  messageClass;\n\n  processing = false;\n  currentUrl;\n  form;\n\n  emailValid;\n  emailMessage;\n\n  usernameValid;\n  usernameMessage;\n\n  user;\n\n  loadEditForm = true;\n\n  subject;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private authService: AuthService\n  ) \n  {\n    this.createForm();\n\n  }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(data => {\n    if(!data.success){\n      this.messageClass= 'alert alert-danger';\n        this.message = \"User Not found\";\n    } else {\n      this.user = data.user;\n    }\n    }\n  )\n  }\n  \n  editUserForm(){\n    this.loadEditForm = false\n  }\n  createForm() {\n    this.form = this.formBuilder.group({\n      f_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      l_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateEmails\n      ])],\n      username: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateUsername\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(80),\n        this.validatePassword\n      ])],\n      confirm_password: ['', Validators.required]\n    }, { validator: this.matchingPasswords('password', 'confirm_password') })\n  }\n\n  goBack()\n  {\n    this.loadEditForm=true;\n  }\n\n  updateSubjectSubmit()\n  {\n    this.processing = true;\n    this.authService.updateProfile(this.user).subscribe(data => {\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.location.back();\n        },2000)\n      }\n    });\n  }\n\n  validateEmails(controls) {\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if (regExp.test(String(controls.value))) {\n      return null;\n    } else {\n      return { 'validateEmails': true };\n    }\n  }\n\n  validateUsername(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateUsername': true };\n    }\n  }\n\n  validateName(controls) {\n    const regExp = new RegExp(/^[a-zA-Z]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateName': true };\n    }\n  }\n\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validatePassword': true };\n    }\n  }\n\n\n  matchingPasswords(password, confirm_password) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm_password].value) {\n        return null;\n      } else {\n        return { 'matchingPasswords': true };\n      }\n    }\n  }\n\n  checkEmail() {\n    const email = this.form.get('email').value;\n    if (email.length != 0) {\n      this.authService.checkEmail(email).subscribe(data => {\n        if (!data.success) {\n          this.emailValid = false;\n          this.emailMessage = data.message;\n        } else {\n          this.emailValid = true;\n          this.emailMessage = data.message;\n        }\n      });\n    }\n  }\n\n  checkUsername() {\n    const username = this.form.get('username').value;\n    if (username.length != 0) {\n      this.authService.checkUsername(username).subscribe(data => {\n        if (!data.success) {\n          this.usernameValid = false;\n          this.usernameMessage = data.message;\n        } else {\n          this.usernameValid = true;\n          this.usernameMessage = data.message;\n        }\n      });\n    }\n  }\n\n  \n\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n}\\n\\n.card {\\n    top: 10px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n\\n.card button\\n{\\n    width:100%;\\n    border-radius: 20px;\\n}\\n\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n\\n.policy\\n{\\n    font-size: 12px;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\"","module.exports = \"<div class=\\\"registration\\\">\\n\\n  <!-- Registration -->\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n      \\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Register</h1>\\n\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- First Name -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.f_name.errors && form.controls.f_name.dirty), 'has-success': !form.controls.f_name.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"f_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"f_name\\\" />\\n          <label>First name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.f_name.errors?.required && form.controls.f_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.f_name.errors?.minlength || form.controls.f_name.errors?.maxlength) && form.controls.f_name.dirty\\\">*Minimum\\n              characters: 2\\n              Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.f_name.errors?.validateName && form.controls.f_name.dirty && (form.controls.f_name.value.length != 0)\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Last Name -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.l_name.errors && form.controls.l_name.dirty), 'has-success': !form.controls.l_name.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"l_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"l_name\\\" />\\n          <label>Last name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.l_name.errors?.required && form.controls.l_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.l_name.errors?.minlength || form.controls.l_name.errors?.maxlength) && form.controls.l_name.dirty && form.controls.l_name.value.length != 0\\\">*Minimum\\n              characters: 2, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.l_name.errors?.validateName && form.controls.l_name.dirty && form.controls.l_name.dirty && form.controls.l_name.value.length != 0\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Email -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"/>\\n          <label>Email</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty && form.controls.email.touched && form.controls.email.value.length < 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.validateEmails && form.controls.email.dirty && form.controls.email.value.length >= 5\\\">Invalid\\n              email\\n            </p>\\n          </div>\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"emailMessage && !form.controls.email.errors?.validateEmails\\\">{{emailMessage}}</p>\\n        </div>\\n\\n        <!-- Username -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\n          <input type=\\\"text\\\" name=\\\"username\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\" />\\n          <label>Username</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty && form.controls.username.value.length != 0\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty && form.controls.username.value.length != 0\\\">Username\\n              must not have any special characters\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"usernameMessage && !form.controls.username.errors?.validateUsername && !form.controls.username.errors?.minlength && !form.controls.username.errors?.maxlength\\\">{{usernameMessage}}</p>\\n\\n\\n          </div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{ 'has-error': form.controls.password.errors && form.controls.password.dirty , 'has-success':!form.controls.password.errors }\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\n          <label>Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This\\n              field is required </p>\\n\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) && form.controls.password.dirty && form.controls.password.value.length <= 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            \\n          </div>\\n          <!-- Invalid data error  -->\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty && form.controls.password.value.length > 5\\\">Passord\\n              must contain atleast 1 Uppercase, 1 lowercase, 1 number and 1 special character\\n            </p>\\n        </div>\\n\\n\\n        <!-- Confirm Password -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{ 'has-error': (form.controls.confirm_password.errors && form.controls.confirm_password.dirty) || (form.errors?.matchingPasswords && form.controls.confirm_password.dirty) , 'has-success':!form.controls.confirm_password.errors && !form.errors?.matchingPasswords}\\\">\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"confirm_password\\\" />\\n          <label>Confirm Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.confirm_password.errors?.required && form.controls.confirm_password.dirty\\\">This\\n              field is required\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm_password.dirty\\\">Password\\n              do not match</p>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"policy text-center\\\">By signing up, you are agreeing to the terms and policy of UTS subject review</p>\\n        <button [disabled]=\\\"!form.valid || processing || !usernameValid || !emailValid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"\\\">Register</button>\\n\\n        <!-- First Name -->\\n        <p class=\\\"text-center\\\">Already Have an account? <a routerLink=\\\"/login\\\">Login here</a></p>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../../../__services/validateService/validate.service';\nimport { AuthService } from '../../../../__services/authService/auth.service';\nimport { Router } from '@angular/router';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registering',\n  templateUrl: './registering.component.html',\n  styleUrls: ['./registering.component.css']\n})\nexport class RegisteringComponent implements OnInit {\n\n  form: FormGroup;\n  message;\n  messageClass;\n\n  processing;\n\n  emailValid;\n  emailMessage;\n\n  usernameValid;\n  usernameMessage;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.createForm();\n  }\n\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      f_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      l_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateEmails\n      ])],\n      username: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateUsername\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(80),\n        this.validatePassword\n      ])],\n      confirm_password: ['', Validators.required]\n    }, { validator: this.matchingPasswords('password', 'confirm_password') })\n  }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    this.processing = true;\n    const user = {\n      f_name: this.form.get('f_name').value,\n      l_name: this.form.get('l_name').value,\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n    }\n\n    this.authService.registerUser(user).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        this.processing = false;\n        setTimeout(() => {\n          this.router.navigate(['/login'])\n        }, 2000)\n      }\n    });\n  }\n\n  validateEmails(controls) {\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if (regExp.test(String(controls.value))) {\n      return null;\n    } else {\n      return { 'validateEmails': true };\n    }\n  }\n\n  validateUsername(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateUsername': true };\n    }\n  }\n\n  validateName(controls) {\n    const regExp = new RegExp(/^[a-zA-Z]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateName': true };\n    }\n  }\n\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validatePassword': true };\n    }\n  }\n\n\n  matchingPasswords(password, confirm_password) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm_password].value) {\n        return null;\n      } else {\n        return { 'matchingPasswords': true };\n      }\n    }\n  }\n\n  checkEmail() {\n    const email = this.form.get('email').value;\n    if (email.length != 0) {\n      this.authService.checkEmail(email).subscribe(data => {\n        if (!data.success) {\n          this.emailValid = false;\n          this.emailMessage = data.message;\n        } else {\n          this.emailValid = true;\n          this.emailMessage = data.message;\n        }\n      });\n    }\n  }\n\n  checkUsername() {\n    const username = this.form.get('username').value;\n    if (username.length != 0) {\n      this.authService.checkUsername(username).subscribe(data => {\n        if (!data.success) {\n          this.usernameValid = false;\n          this.usernameMessage = data.message;\n        } else {\n          this.usernameValid = true;\n          this.usernameMessage = data.message;\n        }\n      });\n    }\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {Router, CanActivate} from '@angular/router'\nimport {AuthService} from '../__services/authService/auth.service'\nimport {Location} from '@angular/common'\n\n@Injectable() \nexport class AuthGuard implements CanActivate {\n    constructor(\n        private authService:AuthService,\n        private router:Router,\n        private locatation:Location\n    ){}\n\n    canActivate() {\n        if(!this.authService.notLoggedIn()){\n            return true;\n        } else {\n            this.router.navigate(['/login'])\n            return false;\n        }\n    }\n}\n","import {Injectable} from '@angular/core'\nimport {Router, CanActivate} from '@angular/router'\nimport {AuthService} from '../__services/authService/auth.service'\n\n@Injectable() \nexport class NotAuthGuard implements CanActivate {\n    constructor(\n        private authService:AuthService,\n        private router:Router\n    ){}\n\n    canActivate() {\n        if(!this.authService.notLoggedIn()){\n            this.router.navigate(['/dashboard'])\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n","export class Rating {\n  public _id;\n  public userID;\n  public ratingDescription;\n  public subjectID;\n  public editFlag = false;\n  public username;\n  public star;\n\n  constructor() {\n    this._id = '';\n    this.userID = '';\n    this.ratingDescription = '';\n    this.subjectID = '';\n    this.editFlag = false;\n    this.username = '';\n    this.star = 0;\n  }\n}\n","import {Rating} from 'src/app/__models/rating';\n\nexport class Subject {\n  public _id;\n  public subjectNumber;\n  public subjectName;\n  public numberOfReview;\n  public percentageRating;\n  public description;\n  public ratingIDs: Array<string>;\n\n  constructor() {\n    this._id = '';\n    this.subjectNumber = '';\n    this.subjectName = '';\n    this.numberOfReview = 0;\n    this.percentageRating = 0;\n    this.description = '';\n    this.ratingIDs = [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n//subject\n// import { SubjectsComponent } from './../__components/subject/subjects/subjects.component';\n// import { SubjectDetailComponent } from './../__components/subject/subject-detail/subject-detail.component';\n// import { SubjectSearchComponent } from './../__components/subject/subject-search/subject-search.component';\nimport { SubjectAddComponent } from './../__components/subject/subject-add/subject-add.component';\nimport { DashboardComponent } from './../__components/subject/dashboard/dashboard.component';\nimport { SubjectFeedComponent } from './../__components/subject/subject-feed/subject-feed.component';\nimport { SubjectEditComponent } from './../__components/subject/subject-edit/subject-edit.component';\nimport { SubjectAddReviewComponent } from './../__components/subject/subject-add-review/subject-add-review.component';\nimport { SubjectDeleteComponent } from './../__components/subject/subject-delete/subject-delete.component';\n\n\n//user\nimport { LoggingComponent } from '../__components/user/login/logging/logging.component';\nimport { ProfileComponent } from '../__components/user/profile/profile.component';\nimport { RegisteringComponent } from '../__components/user/register/registering/registering.component';\n\n//Authentication guards\nimport { NotAuthGuard } from '../__guards/notAuth.guard';\nimport { AuthGuard } from '../__guards/auth.guard';\n\nconst routes: Routes = [  \n  { path: '', component:SubjectFeedComponent, canActivate:[AuthGuard]},\n  { path: 'login', component: LoggingComponent, canActivate:[NotAuthGuard]},\n  { path: 'register', component: RegisteringComponent, canActivate:[NotAuthGuard]},\n  { path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  // { path: 'subjects/detail/:id', component: SubjectDetailComponent, canActivate:[AuthGuard] },\n   { path: 'subjects', component: SubjectFeedComponent, canActivate:[AuthGuard] },\n   { path: 'subjects/add', component: SubjectAddComponent, canActivate:[AuthGuard]},\n   { path: 'subjects/detail/:id', component: SubjectAddReviewComponent, canActivate:[AuthGuard]},\n   { path: 'subjects/edit/:id', component: SubjectEditComponent, canActivate:[AuthGuard]},\n   { path: 'subjects/delete/:id', component: SubjectDeleteComponent, canActivate:[AuthGuard]},\n  { path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n  { path: '**', component: LoggingComponent }, // The \"Catch-All\" Route and send to login\n\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators/'\nimport { JwtHelperService } from '@auth0/angular-jwt'\nimport { Router } from '@angular/router';\n\nconst helper = new JwtHelperService();\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  //url for server\n  // domain = \"http://localhost:8080\"\n  authToken: any;\n  user: any;\n\n  constructor(\n    private http : Http,\n    private router: Router\n  ) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post('/users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  checkUsername(username){\n    return this.http.get('/users/checkUsername/' + username).pipe(map(res => res.json()));\n  }\n\n  checkEmail(email){\n    return this.http.get('/users/checkEmail/'+ email).pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post('/users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  updateProfile(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('/users/profile/updateUser', user, {headers : headers}).pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    return this.http\n      .get('/users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    //Local storage can only store string\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  notLoggedIn(){\n    const isExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    return isExpired;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user= null;\n    localStorage.clear(); \n  }\n\n  \n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages = [];\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport {Observable, of, Subject} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { MessageService } from '../messageService/message.service';\nimport {Rating} from '../../__models/rating';\nimport {Headers, RequestOptions} from '@angular/http';\nimport {AuthService} from '../authService/auth.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class RatingService {\n  public ratingAdded_Observable = new Subject();\n  private ratingsUrl = '/ratings';  // URL to web api\n  options;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private messageService: MessageService) { }\n\n  createAuthenticationHeaders() {\n    this.authService.loadToken();\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'authorization': this.authService.authToken\n      })\n    });\n  }\n  /** GET ratings from the server */\n  getRatings (): Observable<Rating[]> {\n    return this.http.get<Rating[]>(this.ratingsUrl);\n  }\n\n  /** GET rating by id. Return `undefined` when id not found */\n  getRatingNo404<Data>(_id: number): Observable<Rating> {\n    const url = `${this.ratingsUrl}/?id=${_id}`;\n    return this.http.get<Rating[]>(url)\n      .pipe(\n        map(ratings => ratings[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} rating id=${_id}`);\n        }),\n        catchError(this.handleError<Rating>(`getRating _id=${_id}`))\n      );\n  }\n  /** GET ratings from the server */\n  getRatingsbySubjectID (subjectID: number): Observable<Rating[]> {\n    this.createAuthenticationHeaders();\n    const url = `${this.ratingsUrl}/${subjectID}`;\n    return this.http.get<Rating[]>(url);\n  }\n  \n  /** GET rating by id. Will 404 if id not found */\n  getRating(_id: number): Observable<Rating> {\n    const url = `${this.ratingsUrl}/detail/${_id}`;\n    return this.http.get<Rating>(url).pipe(\n      tap(_ => this.log(`fetched rating id=${_id}`)),\n      catchError(this.handleError<Rating>(`getRating id=${_id}`))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new rating to the server */\n  addRating (rating: Rating): Observable<Rating> {\n    console.log(rating);\n    return this.http.post<Rating>(`${this.ratingsUrl}/add/`, rating, httpOptions).pipe(\n      tap((rating: Rating) => this.log(`added rating w/ id=${rating._id}`)),\n      catchError(this.handleError<Rating>('addRating'))\n    );\n  }\n\n  /** DELETE: delete the rating from the server */\n  deleteRating (rating: Rating): Observable<Rating> {\n    console.log(rating);\n    const url = `${this.ratingsUrl}/delete/${rating._id}`;\n    return this.http.delete<Rating>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted rating _id=${rating._id}`)),\n      catchError(this.handleError<Rating>('deleteRating'))\n    );\n  }\n\n  /** PUT: update the rating on the server */\n  updateRating (rating: Rating): Observable<any> {\n    return this.http.put(`${this.ratingsUrl}/update`, rating, httpOptions).pipe(\n      tap(_ => this.log(`updated rating _id=${rating._id}`)),\n      catchError(this.handleError<any>('updateRating'))\n    );\n  }\n  notifyRatingAddition() {\n    this.ratingAdded_Observable.next();\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a RatingService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`RatingService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { AuthService } from './../authService/auth.service';\nimport { map } from 'rxjs/operators/';\nimport { Router } from '@angular/router';\nimport {Subject} from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class SubjectService {\n  public subjectAdded_Observable = new Subject();\n  options;\n  // domain = this.authService.domain;// URL to web api\n\n  constructor(\n    private authService: AuthService,\n    private http: Http\n    ) { }\n\n  createAuthenticationHeaders() {\n    this.authService.loadToken();\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'authorization': this.authService.authToken\n      })\n    });\n  }\n  notifySubjectAddition() {\n    this.createAuthenticationHeaders();\n    this.subjectAdded_Observable.next();\n  }\n  newSubject(subject){\n    this.createAuthenticationHeaders();\n    return this.http.post('/subjects/addSubject', subject, this.options).pipe(map(res => res.json()));\n  }\n\n  getAllSubjects() {\n    this.createAuthenticationHeaders();\n    return this.http.get('/subjects/allSubjects', this.options).pipe(map(res => res.json()));\n  }\n\n  getDashboardSubjects() {\n    this.createAuthenticationHeaders();\n    return this.http.get('/subjects/dashboard', this.options).pipe(map(res => res.json()));\n  }\n\n  getSingleSubject(id) {\n    this.createAuthenticationHeaders();\n    return this.http.get('/subjects/singleSubject/' + id, this.options).pipe(map(res => res.json()));\n  }\n\n  editSubject(subject) {\n    this.createAuthenticationHeaders();\n    return this.http.put('/subjects/updateSubject', subject, this.options).pipe(map(res => res.json()));\n  }\n\n  deleteSubject(id) {\n    this.createAuthenticationHeaders();\n    return this.http.delete('/subjects/deleteSubject/' + id, this.options).pipe(map(res => res.json()));\n  }\n\n  postReview(id, reviewComment, reviewRating) {\n    this.createAuthenticationHeaders();\n    const subjectData = {\n      reviewComment: reviewComment,\n      reviewRating: reviewRating\n    }\n    return this.http.post('subjects/addreview/'+id, subjectData,this.options).pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.password == undefined) {\n      console.log('no Error');\n        return false;\n    } else {\n      console.log(\"Error\")\n      return true;\n    }     \n  }\n\n  //Regex email validation to ensure that it uses correct email format\n  // validateEmail(controls) {\n  //   //Regex email validation\n  //   console.log(\"hello\");\n  // }\n}\n","module.exports = \".bg{\\n    background-image: url('login.jpg'); height: 100%; background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: cover;\\n    height: 1024px;\\n}\\n\\nnobg{\\n    background-color: grey;\\n}\\n\"","module.exports = \"\\n<!-- background image display according to the login status -->\\n<div [ngClass]=\\\"{'bg': authService.notLoggedIn(), 'nobg': !authService.notLoggedIn()}\\\">\\n\\n\\n    <app-layout>\\n    <app-header></app-header>\\n    <flash-messages></flash-messages>\\n    <!--TODO: Get this flash message going\\n    <ng-flash-message></ng-flash-message> -->\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n    </app-layout>\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { AuthService } from './__services/authService/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'subject-review';\n\n  constructor(private authService: AuthService){}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, InjectionToken } from '@angular/core';\n\n//Forms Module for angular\nimport { FormsModule } from \"@angular/forms\";\n\n//Http module required for server connection\nimport { HttpModule } from \"@angular/http\"\nimport { HttpClientModule } from '@angular/common/http';\n\n//JWT\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n//importing Components\nimport { AppComponent } from './app.component';\n\n//subject\n// import { SubjectsComponent } from './__components/subject/subjects/subjects.component';\n// import { SubjectDetailComponent } from './__components/subject/subject-detail/subject-detail.component';\n// import { SubjectSearchComponent } from './__components/subject/subject-search/subject-search.component';\n// import { SubjectAddComponent } from './__components/subject/subject-add/subject-add.component';\n\nimport { DashboardComponent } from './__components/subject/dashboard/dashboard.component';\n\n//ui\nimport { LayoutComponent } from './__components/ui/layout/layout.component';\nimport { HeaderComponent } from './__components/ui/header/header.component';\nimport { FooterComponent } from './__components/ui/footer/footer.component';\n\n//user\nimport { LoggingComponent } from './__components/user/login/logging/logging.component';\nimport { ProfileComponent } from './__components/user/profile/profile.component';\nimport { RegisteringComponent } from './__components/user/register/registering/registering.component';\n\n//Importing Authentication Guard\nimport { AuthGuard } from './__guards/auth.guard';\nimport { NotAuthGuard } from './__guards/notAuth.guard';\n\n//Importing Service\nimport { ValidateService } from './__services/validateService/validate.service';\nimport { AuthService } from './__services/authService/auth.service';\n\n//Routing Module\nimport { AppRoutingModule } from './__routes/app-routing.module';\n\n//Reactive Forms\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//importing flash message module\nimport { FlashMessagesModule, FlashMessagesService } from 'angular2-flash-messages';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n//Subject\nimport { SubjectFeedComponent } from './__components/subject/subject-feed/subject-feed.component';\nimport { SubjectAddComponent } from './__components/subject/subject-add/subject-add.component';\nimport { SubjectAddReviewComponent } from './__components/subject/subject-add-review/subject-add-review.component';\nimport { SubjectEditComponent } from './__components/subject/subject-edit/subject-edit.component';\nimport { SubjectDeleteComponent } from './__components/subject/subject-delete/subject-delete.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    RegisteringComponent,\n    LoggingComponent,\n    LayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    SubjectAddComponent,\n    // SubjectDetailComponent,\n    // SubjectsComponent,\n    // SubjectSearchComponent,\n    DashboardComponent,\n    SubjectFeedComponent,\n    SubjectAddComponent,\n    SubjectAddReviewComponent,\n    SubjectEditComponent,\n    SubjectDeleteComponent,\n  ],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FlashMessagesModule,\n    NgxSpinnerModule\n  ],\n  \n  providers: [ValidateService, AuthService, JwtHelperService, AuthGuard, NotAuthGuard, FlashMessagesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}